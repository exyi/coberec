type ModuleSignature {
    name: String
}

type NamespaceSignature {
    name: String
    parent: NamespaceSignature!
}

type Accessibility {
    public: Boolean
    derivedVisible: Boolean
    internalVisible: Boolean
}

union TypeOrNamespace = NamespaceSignature | TypeSignature

type GenericParameter {
    id: ID
    name: String
}

interface MemberSignature {
    name: String
    accessibility: Accessibility
}

type TypeSignature implements MemberSignature {
    name: String
    parent: TypeOrNamespace
    kind: String
    isValueType: Boolean
    canOverride: Boolean
    isAbstract: Boolean
    accessibility: Accessibility
    genericParamCount: Int
}

type SpecializedType {
    type: TypeSignature
    genericParameters: [TypeReference]
}

type ArrayType {
    type: TypeReference
    dimensions: Int
}

type ByReferenceType {
    type: TypeReference
}

type PointerType {
    type: TypeReference
}

# represents an anonymous delegate
# it has a limitation that the function can not return itself (by type), but it can for example return equivalent delegate type
type FunctionType {
    params: [MethodParameter]
    resultType: TypeReference
}

union TypeReference = SpecializedType | ArrayType | ByReferenceType | PointerType | GenericParameter | FunctionType

type MethodParameter {
    type: TypeReference
    name: String
    hasDefaultValue: Boolean
    defaultValue: Any!
}

type MethodSignature implements MemberSignature {
    declaringType: TypeSignature
    params: [MethodParameter]
    name: String
    resultType: TypeReference
    isStatic: Boolean
    accessibility: Accessibility
    isVirtual: Boolean
    isOverride: Boolean
    isAbstract: Boolean
    hasSpecialName: Boolean
    typeParameters: [GenericParameter]
}

type FieldSignature implements MemberSignature {
    declaringType: TypeSignature
    name: String
    accessibility: Accessibility
    resultType: TypeReference
    isStatic: Boolean
    isReadonly: Boolean
}

type PropertySignature implements MemberSignature {
    declaringType: TypeSignature
    type: TypeReference
    name: String
    accessibility: Accessibility
    isStatic: Boolean
    getter: MethodSignature!
    setter: MethodSignature!
}
