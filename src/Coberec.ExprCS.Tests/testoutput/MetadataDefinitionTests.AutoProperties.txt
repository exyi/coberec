TypeDef {signature = MyNamespace.MyType, extends = , implements = [], members = [ FieldDef {signature = private readonly <A>k__BackingField: string, doccomment = }, PropertyDef {signature = A { get; }: string, getter = MethodDef {signature = [specialname] get_A(): string, argumentParams = [ this[aaaaaaaa-bbbb-cccc-dddd-000000000001 : MyNamespace.MyType] ], body = *this[aaaaaaaa-bbbb-cccc-dddd-000000000001 : MyNamespace.MyType].private readonly <A>k__BackingField: string, implements = [], doccomment = }, setter = , implements = [], doccomment = }, FieldDef {signature = private static readonly <B>k__BackingField: string, doccomment = }, PropertyDef {signature = static B { get; }: string, getter = MethodDef {signature = static [specialname] get_B(): string, argumentParams = [], body = *.private static readonly <B>k__BackingField: string, implements = [], doccomment = }, setter = , implements = [], doccomment = }, FieldDef {signature = private static <C>k__BackingField: string, doccomment = }, PropertyDef {signature = static C { get; set; }: string, getter = MethodDef {signature = static [specialname] get_C(): string, argumentParams = [], body = *.private static <C>k__BackingField: string, implements = [], doccomment = }, setter = MethodDef {signature = static [specialname] set_C(value: string): void, argumentParams = [ value[aaaaaaaa-bbbb-cccc-dddd-000000000002 : string] ], body = .private static <C>k__BackingField: string = value[aaaaaaaa-bbbb-cccc-dddd-000000000002 : string], implements = [], doccomment = }, implements = [], doccomment = }, FieldDef {signature = private <D>k__BackingField: string, doccomment = }, PropertyDef {signature = D { get; set; }: string, getter = MethodDef {signature = [specialname] get_D(): string, argumentParams = [ this[aaaaaaaa-bbbb-cccc-dddd-000000000003 : MyNamespace.MyType] ], body = *this[aaaaaaaa-bbbb-cccc-dddd-000000000003 : MyNamespace.MyType].private <D>k__BackingField: string, implements = [], doccomment = }, setter = MethodDef {signature = [specialname] set_D(value: string): void, argumentParams = [ this[aaaaaaaa-bbbb-cccc-dddd-000000000004 : MyNamespace.MyType], value[aaaaaaaa-bbbb-cccc-dddd-000000000005 : string] ], body = this[aaaaaaaa-bbbb-cccc-dddd-000000000004 : MyNamespace.MyType].private <D>k__BackingField: string = value[aaaaaaaa-bbbb-cccc-dddd-000000000005 : string], implements = [], doccomment = }, implements = [], doccomment = }, FieldDef {signature = private readonly <E>k__BackingField: struct System.TimeSpan, doccomment = }, PropertyDef {signature = E { get; }: struct System.TimeSpan, getter = MethodDef {signature = [specialname] get_E(): struct System.TimeSpan, argumentParams = [ this[aaaaaaaa-bbbb-cccc-dddd-000000000006 : MyNamespace.MyType] ], body = *this[aaaaaaaa-bbbb-cccc-dddd-000000000006 : MyNamespace.MyType].private readonly <E>k__BackingField: struct System.TimeSpan, implements = [], doccomment = }, setter = , implements = [], doccomment = }, FieldDef {signature = private readonly <F>k__BackingField: MyNamespace.MyType, doccomment = }, PropertyDef {signature = F { get; }: MyNamespace.MyType, getter = MethodDef {signature = [specialname] get_F(): MyNamespace.MyType, argumentParams = [ this[aaaaaaaa-bbbb-cccc-dddd-000000000007 : MyNamespace.MyType] ], body = *this[aaaaaaaa-bbbb-cccc-dddd-000000000007 : MyNamespace.MyType].private readonly <F>k__BackingField: MyNamespace.MyType, implements = [], doccomment = }, setter = , implements = [], doccomment = } ], doccomment = }
